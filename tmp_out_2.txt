    for it in items:
        # Already promoted: count as skipped (idempotent)
        if it.status == "PROMOTED":
            skipped += 1
            continue
        # Only attempt to promote valid items
        if it.status != "OK":
            continue
        try:
            if it.dedupe_hash and repo.exists_promoted_hash(db, empresa_id, it.dedupe_hash):
                skipped += 1
                continue
            res = handler.promote(it.normalized or it.raw or {}, it.promoted_id)
            if res.skipped:
                skipped += 1
                continue
            it.promoted_to = batch.source_type
            it.promoted_id = None
            it.promoted_at = datetime.utcnow()
            it.status = "PROMOTED"
            db.add(it)

            lineage = ImportLineage(
                empresa_id=empresa_id,   # INT
                item_id=it.id,           # UUID
                promoted_to=batch.source_type,
                promoted_ref=res.domain_id or "",
            )
            db.add(lineage)
            created += 1
        except Exception:
            it.status = "ERROR_PROMOTION"
            db.add(it)
            failed += 1
    db.commit()
    t1 = datetime.utcnow()
    try:
        logging.getLogger("imports").info(
            "promote_batch",
            extra={
                "tenant": empresa_id,
                "batch_id": str(batch_uuid),
                "items_total": len(items),
                "items_ok": created,
                "items_error": failed,
                "t_promote_ms": int((t1 - t0).total_seconds() * 1000),
            },
        )
    except Exception:
        pass
    return {"created": created, "skipped": skipped, "failed": failed}
